<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Af8BAQH/AQEB/wEBAf8BAQH/AQEB/wEBAf8AAAD/qampqv///wL///8CmZmZtAAAAP8BAQH/AQEB/wEB
        Af8BAQH/AQEB/wEBAf8BAQH/AQEB/0hISP///////////9ra2v8AAAD/DAwM/+vr6///////X19f/wAA
        AP8BAQH/AQEB/wEBAf8BAQH/AQEB/wEBAf8BAQH/AQEB/wAAAP/q6uqEAAAAAAAAAAD///92AAAA/wEB
        Af8BAQH/AQEB/wEBAf8BAQH/AQEB/wEBAf8BAQH/enp6////////////5eXl/wAAAP8cHBz/8/Pz////
        //+oqKj/AAAA/wEBAf8BAQH/AQEB/wEBAf8BAQH/AQEB/wEBAf8BAQH/CQkJ/////1wAAAAAAAAAAP//
        /zQrKyv/AQEB/wEBAf8BAQH/AQEB/wEBAf8BAQH/AQEB/wAAAP+bm5v////////////s7Oz/Dg4O/y4u
        Lv/7+/v//////+Pj4/8AAAD/AQEB/wEBAf8BAQH/AQEB/wEBAf8BAQH/AQEB/wEBAf8nJyf/////OgAA
        AAAAAAAA////DF5eXt4BAQH/AQEB/wEBAf8BAQH/AQEB/wEBAf8BAQH/AAAA/6Kiov////////////r6
        +v8oKCj/Wlpa/////////////////wAAAP8BAQH/AQEB/wEBAf8BAQH/AQEB/wEBAf8BAQH/AQEB/zo6
        Ovb///8gAAAAAAAAAAAAAAAAfX19ogAAAP8AAAD/AQEB/wEBAf8BAQH/AQEB/wEBAf8AAAD/i4uL////
        ///u7u7/1NTU/1VVVf+oqKj/ubm5////////////BwcH/wEBAf8BAQH/AQEB/wEBAf8AAAD/AAAA/wAA
        AP8AAAD/goKCqv///wYAAAAAAAAAAAAAAAD///8mgYGBok9PT84zMzPkJiYm9hMTE/8AAAD/AAAA/wEB
        Af9YWFj///////////+Dg4P/MzMz/05OTv/u7u7///////////8KCgr/AQEB/wAAAP8bGxv/MDAw6FhY
        WMqOjo6iycnJfv///1z///8SAAAAAAAAAAAAAAAAAAAAAAAAAAD///8C////CPv7+xTj4+Mu5eXlXKWl
        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
        AAAAAAAAAAAAADQ0NKA3Nzf/NjY21AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADIyMjAtLS0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////+AAAABgAAAAYAAAAGAAAABwAAAA8AAAAPAAAADwAAAA+AA
        AB//AAH//8AD///gB///8A////AH///gAf//wAH//4AD//+AB///wAf//+AP///4H////B////4/////
        ////////////////////////////////////////
</value>
  </data>
</root>